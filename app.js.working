'use strict';

var wavesurfer;

// Init & load
document.addEventListener('DOMContentLoaded', function() {

    var pluginOptions = {
        minimap: {
            waveColor: '#777',
            progressColor: '#222',
            height: 60
        },
        timeline: {
            container: '#wave-timeline'
        },
        spectrogram: {
            container: '#wave-spectrogram'
	    //labels: true
	    //colorMap: colorMap
        },
        cursor: {},
        regions: {},
    };


    var options = {
        container: '#waveform',
        height: 300,
	normalize: true,
        waveColor: 'green',
        progressColor: 'blue',
        loaderColor: 'green',
	barWidth: 3,
        barRadius: 3,
	cursorWidth: 2,
        cursorColor: 'navy',
        plugins: [WaveSurfer.cursor.create(pluginOptions.cursor)]
    };



    if (location.search.match('scroll')) {
        options.minPxPerSec = 100;
        options.scrollParent = true;
    }

    if (location.search.match('normalize')) {
        options.normalize = true;
    }

    // Init wavesurfer
    wavesurfer = WaveSurfer.create(options);

    [].forEach.call(
        document.querySelectorAll('[data-activate-plugin]'),
        function(el) {
            var activePlugins = wavesurfer.initialisedPluginList;
            Object.keys(activePlugins).forEach(function(name) {
                if (el.dataset.activatePlugin === name) {
                    el.checked = true;
                }
            });
        }
    );

    [].forEach.call(
        document.querySelectorAll('[data-activate-plugin]'),
        function(el) {
            el.addEventListener('change', function(e) {
                var pluginName = e.currentTarget.dataset.activatePlugin;
                var activate = e.target.checked;
                var options = pluginOptions[pluginName] || {};
                var plugin = WaveSurfer[pluginName].create(options);

                if (activate) {
                    wavesurfer.addPlugin(plugin).initPlugin(pluginName);
                } else {
                    wavesurfer.destroyPlugin(pluginName);
                }
            });
        }
    );

    /* Progress bar */
    (function() {
        var progressDiv = document.querySelector('#progress-bar');
        var progressBar = progressDiv.querySelector('.progress-bar');

        var showProgress = function(percent) {
            progressDiv.style.display = 'block';
            progressBar.style.width = percent + '%';
        };

        var hideProgress = function() {
            progressDiv.style.display = 'none';
        };

        wavesurfer.on('loading', showProgress);
        wavesurfer.on('ready', hideProgress);
        wavesurfer.on('destroy', hideProgress);
        wavesurfer.on('error', hideProgress);
    })();

    wavesurfer.load('PLG07_20190712_013000.WAV');
});

document.addEventListener('DOMContentLoaded', function() {
    // Load a colormap json file to be passed to the spectrogram.create method.
    WaveSurfer.util
        .fetchFile({ url: 'hot-colormap.json', responseType: 'json' })
        .on('success', colorMap => {
            initAndLoadSpectrogram(colorMap);
        });
});
